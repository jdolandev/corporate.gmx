<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Player controller object has 4 slots
//You can cycle between them with rb and lb

firstChar = obj_player;
secondChar = obj_brute;
thirdChar = obj_guard;
fourthChar = obj_brute;

charSlots[0] = firstChar;
charSlots[1] = secondChar;
charSlots[2] = thirdChar;
charSlots[3] = fourthChar;

var playerOut;

slotnum = 0;    //Start the game with the first slot being highlighted.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>k_switchl = ord('A');
k_switchr = ord('S');

j_lb = gp_shoulderl;
j_rb = gp_shoulderr;

instance_create( x, y, charSlots[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( keyboard_check_pressed( k_switchr ) or gamepad_button_check_pressed(0, j_rb)){
    
    slotnum++;
    
    if( slotnum == 4){
        slotnum = 0;
    }
    
    if( instance_exists( obj_player )){
        instance_create( obj_player.x, obj_player.y, charSlots[slotnum]);
        with( obj_player ){
            instance_destroy();
        }
    }
    else if( instance_exists( obj_brute )){
        instance_create( obj_brute.x, obj_brute.y, charSlots[slotnum]);
        with( obj_brute ){
            instance_destroy();
        }
    }
    else if( instance_exists( obj_guard )){
        instance_create( obj_guard.x, obj_guard.y, charSlots[slotnum]);
        with( obj_guard ){
            instance_destroy();
        }
    }
    if( gamepad_is_connected(0) ){
        gamepad_set_vibration(0, 0, 0);
    }
}
else if( keyboard_check_pressed( k_switchl ) or gamepad_button_check_pressed(0, j_lb)){
    
    slotnum--;
    
    if( slotnum &lt; 0 ){
        slotnum = 3;
    }
    
    if( instance_exists( obj_player )){
        instance_create( obj_player.x, obj_player.y, charSlots[slotnum]);
        with( obj_player ){
            instance_destroy();
        }
    }
    else if( instance_exists( obj_brute )){
        instance_create( obj_brute.x, obj_brute.y, charSlots[slotnum]);
        with( obj_brute ){
            instance_destroy();
        }
    }
    else if( instance_exists( obj_guard )){
        instance_create( obj_guard.x, obj_guard.y, charSlots[slotnum]);
        with( obj_guard ){
            instance_destroy();
        }
    }
    if( gamepad_is_connected(0) ){
        gamepad_set_vibration(0, 0, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
